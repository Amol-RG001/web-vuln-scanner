import argparse
from modules import (a01_broken_access_control,a02_crypto_failures,a03_sql_injection_scanner,
                     a04_xss_scanner, a05_common_headers_check,a06_component_version_checker,
                     a07_auth_failures, a08_data_integrity_check, a09_logging_monitoring_check,
                     a10_ssrf_scanner)
from utils.report_generator import generate_pdf_report


def main():
    # parser = argparse.ArgumentParser(description='Website Vulnerability Scanner')
    # parser.add_argument('url', nargs='?', default='https://smartroncode.netlify.app/contact', help='Target URL to scan')
    # args = parser.parse_args()
    #
    url = input("ðŸ”— Enter the target URL (e.g. https://example.com): ").strip()

    if not url.startswith("http"):
        url = "https://" + url

    print(f"\n[+] Scanning: {url}\n")
    #

    # url = args.url
    # print(f"[+] Scanning: {url}")

    results = {}

    print("[*] Checking for A01: Broken Access Control...")
    results['a01_broken_access_control'] = a01_broken_access_control.scan(url)

    print("[*] Checking for A02: Cryptographic Failures...")
    results['a02_crypto_failures'] = a02_crypto_failures.scan(url)

    print("[*] Checking for A03: Injection (SQL, CMD, etc.)...")
    results['a03_sql_injection'] = a03_sql_injection_scanner.scan(url)

    print("[*] Checking for A04: Insecure Design...")
    results['a04_xss_scanner'] = a04_xss_scanner.scan(url)

    print("[*] Checking for A05: Security Misconfiguration...")
    results['a05_security_headers'] = a05_common_headers_check.check_headers(url)

    print("[*] Checking for A06: Vulnerable and Outdated Components...")
    results['a06_vulnerable_components'] = a06_component_version_checker.scan(url)

    print("[*] Checking for A07: Identification and Authentication Failures...")
    results['a07_auth_failures'] = a07_auth_failures.scan(url)

    print("[*] Checking for A08: Software and Data Integrity Failures...")
    results['a08_data_integrity'] = a08_data_integrity_check.scan(url)

    print("[*] Checking for A09: Security Logging and Monitoring Failures...")
    results['a09_logging_monitoring'] = a09_logging_monitoring_check.scan(url)

    print("[*] Checking for A10: Server-Side Request Forgery (SSRF)...")
    results['a10_ssrf'] = a10_ssrf_scanner.scan(url)


    print("[*] Generating PDF report...")
    generate_pdf_report(url, results)

    print("[âœ“] Scan completed. Report saved.")

if __name__ == '__main__':
    main()
